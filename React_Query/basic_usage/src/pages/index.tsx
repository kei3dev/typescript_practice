import { Suspense, useState, useTransition } from 'react'
import Head from 'next/head'
import { ErrorBoundary } from 'react-error-boundary'

import LayoutCenter from '@/components/LayoutCenter'
import PostList from '@/components/PostList'
import Spinner from '@/components/Spinner'
import TodoList from '@/components/TodoList'
import TabList from '@/components/TabList'

import type { NextPage } from 'next'
import type { Tabs } from '@/types'

const HomePage: NextPage = () => {
  const [selectedTab, setSelectedTab] = useState<Tabs>('todo')
  const [isPending, startTransition] = useTransition()

  const onClickTabButton = (tab: Tabs) => {
    startTransition(() => {
      setSelectedTab(tab)
    })
  }

  return (
    <>
      <Head>
        <title>Hands-on basic usage</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LayoutCenter>
        <div className="mb-2">
          <TabList select={selectedTab} isPending={isPending} onClick={onClickTabButton} />
        </div>
        <div
          className={`mb-5 flex w-[600px] flex-col items-center justify-center border py-6 text-center ${
            isPending ? 'text-[rgba(0,0,0,.6)]' : ''
          }`}
        >
          <h1 className="mb-1 text-xl font-bold">{selectedTab === 'todo' ? 'TODO' : 'POST'}</h1>
          <ErrorBoundary
            fallbackRender={({ error }) => (
              <p className="text-3xl text-red-600">Error! {error.message}</p>
            )}
          >
            <Suspense fallback={<Spinner />}>
              {selectedTab === 'todo' ? <TodoList /> : <PostList />}
            </Suspense>
          </ErrorBoundary>
        </div>
      </LayoutCenter>
    </>
  )
}

export default HomePage
